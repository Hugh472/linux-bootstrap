---
- name: Install torrenting tools
  package:
    name: "{{ item }}"
    state: present
  loop:
    - qbittorrent
    - transmission-cli
    - transmission-daemon
  when: ansible_os_family == 'RedHat'
  become: true

- name: Install torrenting tools
  package:
    name: "{{ item }}"
    state: present
  loop:
    - qbittorrent
    - transmission-cli
    - transmission-daemon
  when: ansible_os_family == 'Debian'
  become: true
  
- name: Install torrenting tools
  package:
    name: "{{ item }}"
    state: present
  loop:
    - libtransmission
    - transmission-cli
    - transmission-gtk
  when: ansible_os_family == 'Archlinux'
  become: true
  

- name: Fetch latest Tor Browser version from API
  uri:
    url: "https://aus1.torproject.org/torbrowser/update_3/release/downloads.json"
    method: GET
    return_content: yes
  register: tor_browser_response

- name: Parse latest version from JSON response
  set_fact:
    latest_tor_version: "{{ tor_browser_response.json | json_query('version') }}"

- name: Display the latest Tor Browser version
  debug:
    msg: "The latest Tor Browser version is: {{ latest_tor_version }}"

- name: Download Tor Browser tarball
  become: true
  get_url:
    url: "https://www.torproject.org/dist/torbrowser/{{ latest_tor_version }}/tor-browser-linux-x86_64-{{ latest_tor_version }}.tar.xz"
    dest: "/home/{{ lookup('env', 'USER') }}/Downloads/tor-browser-linux-x86_64.tar.xz"

- name: Extract Tor Browser
  become: true
  unarchive:
    src: "/home/{{ lookup('env', 'USER') }}/Downloads/tor-browser-linux-x86_64.tar.xz"
    dest: "/home/{{ lookup('env', 'USER') }}/.tor-browser"
    remote_src: yes
    mode: '0770'
    owner: "{{ lookup('env', 'USER') }}"

- name: Create desktop entry for Tor Browser
  ansible.builtin.command: ./start-tor-browser.desktop --register-app
  args:
    chdir: /home/{{ lookup('env', 'USER') }}/.tor-browser/tor-browser
